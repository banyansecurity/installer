{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Banyan Elastic Access Tier v2",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups" : [
        {
          "Label": { "default": "Banyan Configuration" },
          "Parameters": ["ApiKeySecret", "CommandCenterURL", "BanyanPackage"]
        },
        {
          "Label": { "default" : "Network Configuration" },
          "Parameters": ["VPCID", "PublicSubnets", "PrivateSubnets", "HealthCheckCidr", "CrossZoneEnabled"]
        },
        {
          "Label": {"default": "Instance Configuration"},
          "Parameters": ["KeyName", "DatadogApiKey", "MinInstances", "DefaultAmiId", "AmiId", "ManagementCidr"]
        }
      ],
      "ParameterLabels": {
        "VPCID": { "default": "Which VPC should this Access Tier be deployed to?" }
      }
    }
  },
  "Parameters": {
    "VPCID": {
      "Description": "VPC must have internet access through an Internet Gateway",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PublicSubnets": {
      "Description": "Public subnets for the load balancer.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "PrivateSubnets": {
      "Description": "Private subnets for the instances.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "MinInstances": {
      "Default": "2",
      "Description": "Minimum number of instances. 1 instance per az (subnet) recommended",
      "Type": "String"
    },
    "CrossZoneEnabled": {
      "Default": "false",
      "Description": "Enable to distribute traffic across all available instances",
      "Type": "String",
      "AllowedValues" : ["true", "false"]
    },
    "ApiKeySecret": {
      "Description": "Create an API Key with `access_tier' scope in the Admin Settings section of the Banyan console",
      "Type": "String",
      "AllowedPattern": "^[A-Za-z0-9._-]+",
      "MinLength": 32
    },
    "CommandCenterURL": {
      "Description": "Command Center URL",
      "Type": "String",
      "Default": "https://net.banyanops.com",
      "AllowedPattern": "^https://[^\\s]+"
    },
    "BanyanPackage": {
      "Description": "banyan-netagent2, or banyan-netagent2=[VERSION], e.g. banyan-netagent2=2.0.0",
      "Type": "String",
      "Default": "banyan-netagent2",
      "AllowedPattern": "^banyan-netagent2[=0-9.a-z-]*"
    },
    "DatadogApiKey": {
      "Description": "(optional) Datadog API key",
      "Type": "String",
      "Default": ""
    },
    "KeyName": {
      "Description": "(optional) enables SSH on port 2222 for Access Tier instances",
      "Type": "String",
      "Default": ""
    },
    "HealthCheckCidr": {
      "Description": "CIDR range to allow NLB HealthCheck from. Recommend using the VPC CIDR range",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IPv4 CIDR range of the form x.x.x.x/x.",
      "MinLength": "1"
    },
    "ManagementCidr": {
      "Description": "Allow SSH to this Access Tier on port 2222 from the specified CIDR range",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IPv4 CIDR range of the form x.x.x.x/x.",
      "MinLength": "1"
    },
    "DefaultAmiId": {
      "Description": "Default base AMI - Ubuntu 22.04",
      "Type":  "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id"
    },
    "AmiId": {
      "Description": "(optional) leave blank to use Ubuntu 22.04 AMI",
      "Type":  "String",
      "Default": ""
    }
  },
  "Conditions": {
    "UseCustomAmi": {
      "Fn::Not": [
        {"Fn::Equals": ["", {"Ref": "AmiId"}]}
      ]
    },
    "HasKeyName": {
      "Fn::Not": [
        {"Fn::Equals": ["", {"Ref": "KeyName"}]}
      ]}
  },
  "Resources": {
    "BanyanSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Elastic Access Tier ingress traffic",
        "VpcId": {"Ref": "VPCID"},
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "Description": "TCP Services secured by Banyan",
            "FromPort": 8443,
            "ToPort": 8443
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "Description": "Web Services secured by Banyan",
            "FromPort": 443,
            "ToPort": 443
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": {"Ref": "HealthCheckCidr"},
            "Description": "Health Check used for AutoScaling",
            "FromPort": 9998,
            "ToPort": 9998
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": {"Ref":  "ManagementCidr"},
            "Description": "SSH for Management & Troubleshooting",
            "FromPort": 2222,
            "ToPort": 2222
          },
          {
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0",
            "Description": "http traffic to be redirected to https ",
            "FromPort": 80,
            "ToPort": 80
          },
          {
            "IpProtocol": "udp",
            "CidrIp": "0.0.0.0/0",
            "Description": "service tunnel traffic",
            "FromPort": 51820,
            "ToPort": 51820
          }
        ]
      }
    },
    "BanyanNLB": {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Type": "network",
        "IpAddressType": "ipv4",
        "Scheme": "internet-facing",
        "Subnets": {"Ref": "PublicSubnets"},
        "LoadBalancerAttributes": [
          {
            "Key": "load_balancing.cross_zone.enabled",
            "Value":  {"Ref": "CrossZoneEnabled"}
          }
        ]
      }
    },
    "Listener443": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "BanyanTargetGroup443"}
          }
        ],
        "LoadBalancerArn": {"Ref": "BanyanNLB"},
        "Port": 443,
        "Protocol": "TCP"
      }
    },
    "Listener8443": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "BanyanTargetGroup8443"}
          }
        ],
        "LoadBalancerArn": {"Ref": "BanyanNLB"},
        "Port": 8443,
        "Protocol": "TCP"
      }
    },
    "Listener80": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "BanyanTargetGroup80"}
          }
        ],
        "LoadBalancerArn": {"Ref": "BanyanNLB"},
        "Port": 80,
        "Protocol": "TCP"
      }
    },
    "Listener51820": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {"Ref": "BanyanTargetGroup51820"}
          }
        ],
        "LoadBalancerArn": {"Ref": "BanyanNLB"},
        "Port": 51820,
        "Protocol": "UDP"
      }
    },
    "BanyanLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {"Fn::If": ["HasKeyName", {"Ref": "KeyName"}, {"Ref": "AWS::NoValue"}]},
        "ImageId": {"Fn::If": ["UseCustomAmi", {"Ref": "AmiId"}, {"Ref": "DefaultAmiId"}]},
        "SecurityGroups": [
          {"Ref": "BanyanSecurityGroup"}
        ],
        "InstanceType": "m5.large",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sdc",
            "VirtualName": "ephemeral0"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -x\n",
                "apt-get update -y\n",
                "apt-get install -y python3-pip\n",
                "mkdir -p /opt/aws && wget https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz\n",
                "pip install --target /opt/aws aws-cfn-bootstrap-py3-latest.tar.gz\n",
                "export PYTHONPATH=/opt/aws\n",
                "/opt/aws/bin/cfn-init -v ",
                "--resource BanyanLaunchConfig ",
                "--configsets default ",
                "--stack ", {"Ref": "AWS::StackName"}, " ",
                "--region ", {"Ref": "AWS::Region"}, "\n",
                "export DD_API_KEY=", { "Ref": "DatadogApiKey" }, "\n",
                "if [[ -n \"${DD_API_KEY}\" ]]; then\n",
		"DD_SITE=\"datadoghq.com\" bash -c \"$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)\"\n",
                "fi\n",
                "curl https://www.banyanops.com/onramp/deb-repo/banyan.key | apt-key add -\n",
                "apt-add-repository \"deb https://www.banyanops.com/onramp/deb-repo xenial main\"\n",
                "apt install -y ", {"Ref": "BanyanPackage"}, "\n",
                "cd /opt/banyan-packages\n",
                "ACCESS_TIER_NAME=", {"Ref": "AWS::StackName"}, " ",
                "ACCESS_TIER_PUBLIC_ADDRESS=", { "Fn::GetAtt" : [ "BanyanNLB", "DNSName" ]}, " ",
		"API_KEY_SECRET=", {"Ref": "ApiKeySecret"}, " ",
                "COMMAND_CENTER_URL=", {"Ref": "CommandCenterURL"}, " ",
                "./install\n",
                "echo 'Port 2222' >> /etc/ssh/sshd_config && /bin/systemctl restart sshd.service\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "--resource BanyanASG ",
                "--stack ", {"Ref": "AWS::StackName"}, " ",
                "--region ", {"Ref": "AWS::Region"}, "\n"
              ]
            ]
          }
        }
      }
    },
    "BanyanTargetGroup443": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPort": "9998",
        "HealthCheckIntervalSeconds": "30",
        "HealthyThresholdCount": "2",
        "UnhealthyThresholdCount": "2",
        "Port": 443,
        "Protocol": "TCP",
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },
    "BanyanTargetGroup8443": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPort": "9998",
        "HealthCheckIntervalSeconds": "30",
        "HealthyThresholdCount": "2",
        "UnhealthyThresholdCount": "2",
        "Port": 8443,
        "Protocol": "TCP",
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },
    "BanyanTargetGroup80": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPort": "9998",
        "HealthCheckIntervalSeconds": "30",
        "HealthyThresholdCount": "2",
        "UnhealthyThresholdCount": "2",
        "Port": 80,
        "Protocol": "TCP",
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },
    "BanyanTargetGroup51820": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckProtocol": "HTTP",
        "HealthCheckPort": "9998",
        "HealthCheckIntervalSeconds": "30",
        "HealthyThresholdCount": "2",
        "UnhealthyThresholdCount": "2",
        "Port": 51820,
        "Protocol": "UDP",
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },
    "BanyanCPUPolicy":{
      "Type":"AWS::AutoScaling::ScalingPolicy",
      "Properties":{
        "AutoScalingGroupName":{
          "Ref":"BanyanASG"
        },
        "PolicyType":"TargetTrackingScaling",
        "TargetTrackingConfiguration":{
          "PredefinedMetricSpecification":{
            "PredefinedMetricType":"ASGAverageCPUUtilization"
          },
          "TargetValue": "80"
        }
      }
    },
    "BanyanASG": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchConfigurationName": {
          "Ref": "BanyanLaunchConfig"
        },
        "DesiredCapacity": {
          "Ref": "MinInstances"
        },
        "MinSize": {
          "Ref": "MinInstances"
        },
        "MaxSize": "10",
        "VPCZoneIdentifier": {
          "Ref": "PrivateSubnets"
        },
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "ELB",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {"Ref": "AWS::StackName"},
                  "BanyanHost"
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Provider",
            "Value": "BanyanOps",
            "PropagateAtLaunch": "true"
          }
        ],
        "TargetGroupARNs": [
          {"Ref": "BanyanTargetGroup443"},
          {"Ref": "BanyanTargetGroup8443"},
          {"Ref": "BanyanTargetGroup80"},
          {"Ref": "BanyanTargetGroup51820"}
        ]
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT5M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "2",
          "MinInstancesInService": "2",
          "MinSuccessfulInstancesPercent": "100",
          "PauseTime": "PT5M",
          "WaitOnResourceSignals": "true"
        }
      }
    }
  },
  "Outputs": {
    "LoadBalancerCanonicalHostedZoneID": {
      "Value": { "Fn::GetAtt": [ "BanyanNLB", "CanonicalHostedZoneID" ]}
    },
    "LoadBalancer": {
      "Value": { "Fn::GetAtt": [ "BanyanNLB", "DNSName" ]}
    }
  }
}
